#!/bin/bash

set -e
eval $(go env)
export GOROOT
go install
rm -f c2go
rm -f $GOROOT/src/liblink/sched9.c # implement 'build ignore' comment
rm -f $GOROOT/src/cmd/gc/mkbuiltin1.c $GOROOT/src/cmd/gc/y.tab.c # implement 'build ignore' comment
dst=$GOROOT # !!!
cp $dst/src/cmd/internal/obj/zbootstrap.go /tmp
trap "mkdir -p $dst/src/cmd/internal/obj && cp /tmp/zbootstrap.go $dst/src/cmd/internal/obj && cd $dst/src/cmd/gc && git checkout HEAD mkbuiltin1.c y.tab.c" 0
rm -rf $dst/src/cmd/internal/obj
c2go -c c2go.cfg -dst $dst -I $GOROOT/include -I $GOROOT/src/cmd/6g $GOROOT/src/liblink/*.c $GOROOT/src/cmd/gc/*.c $GOROOT/src/cmd/6g/*.c
cp /tmp/zbootstrap.go $dst/src/cmd/internal/obj
for i in add/obj/*.go; do
	base=$(echo $i | sed 's;.*/;;')
	cat $i | grep -v 'build ignore' >$dst/src/cmd/internal/obj/$base
done
for i in add/obj/*/*.go; do
	base=$(echo $i | sed 's;add/obj/;;')
	cat $i | grep -v 'build ignore' >$dst/src/cmd/internal/obj/$base
done
for i in add/gc/*.go; do
	base=$(echo $i | sed 's;.*/;;')
	cat $i | grep -v 'build ignore' >$dst/src/cmd/internal/gc/$base
done
for i in add/new?g/*.go; do
	base=$(echo $i | sed 's;add/;;')
	cat $i | grep -v 'build ignore' >$dst/src/cmd/$base
done
# rm $dst/src/cmd/internal/gc/{lex,reg,popt}.go # temporary, too broken
rm $dst/src/cmd/internal/obj/bio.go
gofmt -w $dst/src/cmd/internal/obj # check for syntax errors, mainly
rm -rf /tmp/c2gomain
mv $dst/src/main /tmp/c2gomain
export GOPATH=""
goimports -w $dst/src/cmd/new* $dst/src/cmd/internal
wc $(find $dst/src/cmd/{internal/obj,internal/gc,new6g} -type f)
go install -gcflags -e cmd/internal/obj... cmd/objwriter cmd/new{5,6,8,9}a cmd/internal/gc cmd/new6g 

exit 0

GOOBJ=2 go tool 6g ~/g/go/test/helloworld.go
GOOBJ=2 go build -work -a strings
go tool dist install cmd/{5,6,8,9}{a,g,l}
for arch in ppc64 ppc64le 386 amd64 amd64p32 arm
do
	os=linux
	if [ "$arch" = "amd64p32" ]; then
		os=nacl
	fi
	echo $os/$arch
	GOOS=$os GOARCH=$arch go tool dist install runtime
	GOOBJ=2 GOOS=$os GOARCH=$arch go build -a std
done
